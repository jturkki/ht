package retriitti.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import retriitti.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.08.23 13:17:43 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class OsallistujatTest {



  // Generated by ComTest BEGIN
  /** testLisaa48 */
  @Test
  public void testLisaa48() {    // Osallistujat: 48
    Osallistujat osallistujat = new Osallistujat(); 
    Osallistuja aku1 = new Osallistuja(), aku2 = new Osallistuja(); 
    assertEquals("From: Osallistujat line: 51", 0, osallistujat.getLkm()); 
    osallistujat.lisaa(aku1); assertEquals("From: Osallistujat line: 52", 1, osallistujat.getLkm()); 
    osallistujat.lisaa(aku2); assertEquals("From: Osallistujat line: 53", 2, osallistujat.getLkm()); 
    osallistujat.lisaa(aku1); assertEquals("From: Osallistujat line: 54", 3, osallistujat.getLkm()); 
    assertEquals("From: Osallistujat line: 55", aku1, osallistujat.anna(0)); 
    assertEquals("From: Osallistujat line: 56", aku2, osallistujat.anna(1)); 
    assertEquals("From: Osallistujat line: 57", aku1, osallistujat.anna(2)); 
    assertEquals("From: Osallistujat line: 58", false, osallistujat.anna(1) == aku1); 
    assertEquals("From: Osallistujat line: 59", true, osallistujat.anna(1) == aku2); 
    try {
    assertEquals("From: Osallistujat line: 60", aku1, osallistujat.anna(3)); 
    fail("Osallistujat: 60 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    osallistujat.lisaa(aku1); assertEquals("From: Osallistujat line: 61", 4, osallistujat.getLkm()); 
    osallistujat.lisaa(aku1); assertEquals("From: Osallistujat line: 62", 5, osallistujat.getLkm()); 
    osallistujat.lisaa(aku1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa80 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa80() throws CloneNotSupportedException {    // Osallistujat: 80
    Osallistujat ost = new Osallistujat(); 
    Osallistuja os1 = new Osallistuja(), os2 = new Osallistuja(); 
    os1.rekisteroi(); os2.rekisteroi(); 
    assertEquals("From: Osallistujat line: 85", 0, ost.getLkm()); 
    ost.korvaaTaiLisaa(os1); assertEquals("From: Osallistujat line: 86", 1, ost.getLkm()); 
    ost.korvaaTaiLisaa(os2); assertEquals("From: Osallistujat line: 87", 2, ost.getLkm()); 
    Osallistuja os3 = os1.clone(); 
    os3.setKatuosoite("kukkuu 2"); 
    ost.korvaaTaiLisaa(os3); assertEquals("From: Osallistujat line: 90", 2, ost.getLkm()); 
  } // Generated by ComTest END
}